/**
 * protocols/IMProtocol.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 539a186a14c7dd5b17fbf235192bb23fdfb4067e9e700765b46bc23ca086da06
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "protocols/IMProtocol.h"
#include "utils/qt/shortcuts.h"

#include <QtDebug>

namespace uniarchive2 { namespace protocols {

QString name_for_im_protocol(IMProtocol protocol) {
    switch (protocol) {
        case IMProtocol::INVALID:
            return "(invalid)";
        case IMProtocol::DIGSBY:
            return "Digsby";
        case IMProtocol::FACEBOOK:
            return "Facebook";
        case IMProtocol::JABBER:
            return "Jabber";
        case IMProtocol::MSN:
            return "MSN";
        case IMProtocol::SKYPE:
            return "Skype";
        case IMProtocol::WHATSAPP:
            return "WhatsApp";
        case IMProtocol::YAHOO:
            return "Yahoo";
    }

    invariant_violation("Invalid IMProtocol value (%lld)", (int64_t)protocol);
}

QDebug operator<< (QDebug stream, IMProtocol protocol) {
    stream << QP(name_for_im_protocol(protocol));

    return stream;
}

QDataStream& operator<< (QDataStream& mut_stream, IMProtocol protocol) {
    mut_stream << (uint8_t)protocol;

    return mut_stream;
}

}}
