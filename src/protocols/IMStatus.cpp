/**
 * protocols/IMStatus.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 637e3db541b53e9f4e5ed3d5df2024158c7e9667e3e4147378da34c0fd26b536
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "protocols/IMStatus.h"
#include "utils/qt/shortcuts.h"
#include "utils/serialization/deserialization_helpers.h"

#include <QtDebug>

namespace uniarchive2 { namespace protocols {

using namespace uniarchive2::utils::serialization;

QString name_for_im_status(IMStatus status) {
    switch (status) {
        case IMStatus::INVALID:
            return "(invalid)";
        case IMStatus::AVAILABLE:
            return "available";
        case IMStatus::AWAY:
            return "away";
        case IMStatus::IDLE:
            return "idle";
        case IMStatus::OFFLINE:
            return "offline";
    }

    invariant_violation("Invalid IMStatus value (%lld)", (int64_t)status);
}

QDebug operator<< (QDebug stream, IMStatus status) {
    stream << QP(name_for_im_status(status));

    return stream;
}

QDataStream& operator>> (QDataStream& mut_stream, IMStatus& mut_status) {
    uint8_t code = must_deserialize(mut_stream, uint8_t);

    switch ((IMStatus)code) {
        case IMStatus::INVALID:
        case IMStatus::AVAILABLE:
        case IMStatus::AWAY:
        case IMStatus::IDLE:
        case IMStatus::OFFLINE:
            mut_status = (IMStatus)code;
            break;
        default:
            invariant_violation("Invalid deserialized IMStatus value (%lld)", (int64_t)code);
    }

    return mut_stream;
}

QDataStream& operator<< (QDataStream& mut_stream, IMStatus status) {
    mut_stream << (uint8_t)status;

    return mut_stream;
}

}}
