/**
 * protocols/skype/SkypeChatRole.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): c3d06378d17905f018c394ddba9f410ccfba7fb4e6b6fe7613fb0496fb189e1a
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "protocols/skype/SkypeChatRole.h"
#include "utils/qt/shortcuts.h"
#include "utils/serialization/deserialization_helpers.h"

#include <QMap>
#include <QtDebug>

namespace uniarchive2 { namespace protocols { namespace skype {

using namespace uniarchive2::utils::serialization;

QString name_for_skype_chat_role(SkypeChatRole role) {
    switch (role) {
        case SkypeChatRole::INVALID:
            return "(invalid)";
        case SkypeChatRole::CREATOR:
            return "creator";
        case SkypeChatRole::MASTER:
            return "master";
        case SkypeChatRole::HELPER:
            return "helper";
        case SkypeChatRole::REGULAR_USER:
            return "regular user";
        case SkypeChatRole::LISTENER:
            return "listener";
    }

    invariant_violation("Invalid SkypeChatRole value (%lld)", (int64_t)role);
}

QString symbol_for_skype_chat_role(SkypeChatRole role) {
    switch (role) {
        case SkypeChatRole::INVALID:
            return "invalid";
        case SkypeChatRole::CREATOR:
            return "creator";
        case SkypeChatRole::MASTER:
            return "master";
        case SkypeChatRole::HELPER:
            return "helper";
        case SkypeChatRole::REGULAR_USER:
            return "regular_user";
        case SkypeChatRole::LISTENER:
            return "listener";
    }

    invariant_violation("Invalid SkypeChatRole value (%lld)", (int64_t)role);
}

SkypeChatRole skype_chat_role_from_symbol(IMM(QString) symbol) {
    const static QMap<QString, SkypeChatRole> MAP = {
        { "invalid",      SkypeChatRole::INVALID },
        { "creator",      SkypeChatRole::CREATOR },
        { "master",       SkypeChatRole::MASTER },
        { "helper",       SkypeChatRole::HELPER },
        { "regular_user", SkypeChatRole::REGULAR_USER },
        { "listener",     SkypeChatRole::LISTENER },
    };

    if (MAP.contains(symbol)) {
        return MAP[symbol];
    }

    invariant_violation("Invalid SkypeChatRole symbol ('%s')", QP(symbol));
}

QDebug operator<< (QDebug stream, SkypeChatRole role) {
    stream << QP(name_for_skype_chat_role(role));

    return stream;
}

QDataStream& operator>> (QDataStream& mut_stream, SkypeChatRole& mut_role) {
    uint8_t code = must_deserialize(mut_stream, uint8_t);

    switch ((SkypeChatRole)code) {
        case SkypeChatRole::INVALID:
        case SkypeChatRole::CREATOR:
        case SkypeChatRole::MASTER:
        case SkypeChatRole::HELPER:
        case SkypeChatRole::REGULAR_USER:
        case SkypeChatRole::LISTENER:
            mut_role = (SkypeChatRole)code;
            break;
        default:
            invariant_violation("Invalid deserialized SkypeChatRole value (%lld)", (int64_t)code);
    }

    return mut_stream;
}

QDataStream& operator<< (QDataStream& mut_stream, SkypeChatRole role) {
    mut_stream << (uint8_t)role;

    return mut_stream;
}

}}}
