/**
 * intermediate_format/content/symbols/SkypeEmoticon.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): a1bfffccd0b78e1ced5da6de2caec71f68f7d96b0258c217745359ca30ae8c60
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/content/symbols/SkypeEmoticon.h"
#include "utils/serialization/deserialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace content {

using namespace uniarchive2::utils::serialization;

SkypeEmoticon::SkypeEmoticon(IMM(QString) semantics, IMM(QString) text_equivalent)
  : RawMessageContentItem(), semantics(semantics), textEquivalent(text_equivalent) {
}

RawMessageContentItemSubType SkypeEmoticon::subType() const {
    return RawMessageContentItemSubType::SKYPE_EMOTICON;
}

CEDE(SkypeEmoticon) SkypeEmoticon::deserializeFromStream(QDataStream& mut_stream, bool skip_type) {
    invariant_violation("SkypeEmoticon deserialization not yet implemented");
}

void SkypeEmoticon::serializeToStreamImpl(QDataStream& mut_stream) const {
    mut_stream << semantics << textEquivalent;
}

void SkypeEmoticon::writeToDebugStreamImpl(QDebug stream) const {
    stream << "[SkypeEmoticon";
    stream << " semantics=" << semantics << " text_equivalent=" << textEquivalent;
    stream << "]";
}

}}}
