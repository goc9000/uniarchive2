/**
 * intermediate_format/content/SkypeQuote.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): f27361b651d486323ea7f0a5dfa27c1df581dc5438547ebee73b5a8006e91f40
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/content/SkypeQuote.h"
#include "utils/qt/debug_extras.h"

namespace uniarchive2 { namespace intermediate_format { namespace content {

SkypeQuote::SkypeQuote(
    IMM(QString) conversation_id,
    IMM(QString) message_guid,
    TAKE(ApparentSubject) author,
    IMM(ApparentTime) time,
    IMM(QString) legacy_header,
    RawMessageContent&& content
) : RawMessageContentItem(), quotedMessageConversationID(conversation_id), quotedMessageGUID(message_guid),
    quotedMessageAuthor(move(author)), quotedMessageTime(time), legacyHeader(legacy_header), content(move(content)) {
    sanityCheckMandatoryParameters();
}

void SkypeQuote::sanityCheckMandatoryParameters() const {
    invariant(quotedMessageAuthor, "Parameter 'author' cannot have empty value");
}

RawMessageContentItemSubType SkypeQuote::subType() const {
    return RawMessageContentItemSubType::SKYPE_QUOTE;
}

void SkypeQuote::writeToDebugStreamImpl(QDebug stream) const {
    stream << "[SkypeQuote";
    stream << " conversation_id=" << quotedMessageConversationID << " message_guid=" << quotedMessageGUID;
    stream << " author=" << quotedMessageAuthor << " time=" << quotedMessageTime << " legacy_header=" << legacyHeader;
    stream << " content=" << content;
    stream << "]";
}

}}}
