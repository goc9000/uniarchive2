/**
 * intermediate_format/content/formatting/EmphasisTag.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 1d22341e0534a7cd8320689198060129e31450c1ff12269e3fb3101758b13b8e
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/content/formatting/EmphasisTag.h"
#include "utils/serialization/deserialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace content {

using namespace uniarchive2::utils::serialization;

EmphasisTag::EmphasisTag(bool open) : StandardTag(open) {
}

RawMessageContentItemSubType EmphasisTag::subType() const {
    return RawMessageContentItemSubType::EMPHASIS_TAG;
}

QString EmphasisTag::tagName() const {
    return "EM";
}

CEDE(EmphasisTag) EmphasisTag::deserializeFromStream(QDataStream& mut_stream, bool skip_type) {
    invariant_violation("EmphasisTag deserialization not yet implemented");
}

void EmphasisTag::serializeOpenTagAttributesToStream(QDataStream& UNUSED mut_stream) const {
}

}}}
