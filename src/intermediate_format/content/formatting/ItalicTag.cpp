/**
 * intermediate_format/content/formatting/ItalicTag.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): f02cd1bafe8abb35a836093011014f65caab2baeb5907ebbde4a4647de428c11
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/content/formatting/ItalicTag.h"
#include "utils/serialization/deserialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace content {

using namespace uniarchive2::utils::serialization;

ItalicTag::ItalicTag(bool open) : StandardTag(open) {
}

RawMessageContentItemSubType ItalicTag::subType() const {
    return RawMessageContentItemSubType::ITALIC_TAG;
}

QString ItalicTag::tagName() const {
    return "I";
}

CEDE(ItalicTag) ItalicTag::deserializeFromStream(QDataStream& mut_stream, bool skip_type) {
    invariant_violation("ItalicTag deserialization not yet implemented");
}

void ItalicTag::serializeOpenTagAttributesToStream(QDataStream& UNUSED mut_stream) const {
}

}}}
