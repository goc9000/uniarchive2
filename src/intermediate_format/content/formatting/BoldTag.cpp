/**
 * intermediate_format/content/formatting/BoldTag.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): f60c0ae298763b446109c15338c641b5bf8e2125377d3c57284be18458cfd133
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/content/formatting/BoldTag.h"
#include "utils/serialization/deserialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace content {

using namespace uniarchive2::utils::serialization;

BoldTag::BoldTag(bool open) : StandardTag(open) {
}

RawMessageContentItemSubType BoldTag::subType() const {
    return RawMessageContentItemSubType::BOLD_TAG;
}

QString BoldTag::tagName() const {
    return "B";
}

CEDE(BoldTag) BoldTag::deserializeFromStream(QDataStream& mut_stream, bool skip_type) {
    invariant_violation("BoldTag deserialization not yet implemented");
}

void BoldTag::serializeOpenTagAttributesToStream(QDataStream& UNUSED mut_stream) const {
}

}}}
