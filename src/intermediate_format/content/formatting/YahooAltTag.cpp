/**
 * intermediate_format/content/formatting/YahooAltTag.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): a8d38cff9af5e93b94512fab29f1304f577fb415204b35e573d6475e7e657f50
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/content/formatting/YahooAltTag.h"
#include "utils/qt/debug_extras.h"
#include "utils/serialization/serialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace content {

YahooAltTag::YahooAltTag(IMM(Color) color1, IMM(Color) color2) : StandardTag(true), color1(color1), color2(color2) {
}

YahooAltTag::YahooAltTag() : StandardTag(false) {
}

RawMessageContentItemSubType YahooAltTag::subType() const {
    return RawMessageContentItemSubType::YAHOO_ALT_TAG;
}

QString YahooAltTag::tagName() const {
    return "Alt";
}

void YahooAltTag::serializeOpenTagAttributesToStream(QDataStream& mut_stream) const {
    mut_stream << *color1 << *color2;
}

void YahooAltTag::writeOpenTagAttributesToDebugStream(QDebug stream) const {
    stream << " " << color1 << " " << color2;
}

}}}
