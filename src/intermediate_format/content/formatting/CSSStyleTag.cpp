/**
 * intermediate_format/content/formatting/CSSStyleTag.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): c1d1f95a1ab27c1bbd7fddcd3137504d7d422dbe2ef40e994d4982953ed054a9
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/content/formatting/CSSStyleTag.h"
#include "utils/qt/debug_extras.h"
#include "utils/serialization/deserialization_helpers.h"
#include "utils/serialization/serialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace content {

using namespace uniarchive2::utils::serialization;

CSSStyleTag::CSSStyleTag(IMM(QString) css) : StandardTag(true), css(css) {
}

CSSStyleTag::CSSStyleTag() : StandardTag(false) {
}

RawMessageContentItemSubType CSSStyleTag::subType() const {
    return RawMessageContentItemSubType::CSS_STYLE_TAG;
}

QString CSSStyleTag::tagName() const {
    return "Style";
}

CEDE(CSSStyleTag) CSSStyleTag::deserializeFromStream(QDataStream& mut_stream, bool skip_type) {
    invariant_violation("CSSStyleTag deserialization not yet implemented");
}

void CSSStyleTag::serializeOpenTagAttributesToStream(QDataStream& mut_stream) const {
    mut_stream << *css;
}

void CSSStyleTag::writeOpenTagAttributesToDebugStream(QDebug stream) const {
    stream << " " << css;
}

}}}
