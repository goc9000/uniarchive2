/**
 * intermediate_format/content/TextSection.cpp
 *
 * WARNING: This file is partially autogenerated. Edit only the custom sections, or autogen_config.yml and re-generate.
 * Codegen hash (sha256): 3560177ae103e9de6fb8eb28af501a1762e9b4c14af7de117a37a894af60243a
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/content/TextSection.h"
#include "utils/serialization/deserialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace content {

using namespace uniarchive2::utils::serialization;

TextSection::TextSection(IMM(QString) text) : RawMessageContentItem(), text(text) {
}

RawMessageContentItemSubType TextSection::subType() const {
    return RawMessageContentItemSubType::TEXT_SECTION;
}

CEDE(TextSection) TextSection::deserializeFromStream(QDataStream& mut_stream, bool skip_type) {
    invariant_violation("TextSection deserialization not yet implemented");
}

void TextSection::serializeToStreamImpl(QDataStream& mut_stream) const {
    mut_stream << text;
}

void TextSection::writeToDebugStreamImpl(QDebug stream) const {
    // BEGIN CUSTOM SECTION: Debug write method
    stream << text;
    // END CUSTOM SECTION: Debug write method
}

}}}
