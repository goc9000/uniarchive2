/**
 * intermediate_format/ApparentTimeReference.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 93dca1034449c6c960a056ac732f8fd6985b5486bb74e76cb3af980f50a06ca8
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/ApparentTimeReference.h"
#include "utils/qt/shortcuts.h"

#include <QtDebug>

namespace uniarchive2 { namespace intermediate_format {

QString name_for_apparent_time_reference(ApparentTimeReference reference) {
    switch (reference) {
        case ApparentTimeReference::UNKNOWN:
            return "unknown";
        case ApparentTimeReference::LOCAL_TIME:
            return "local time";
        case ApparentTimeReference::SPECIFIED:
            return "specified";
    }

    invariant_violation("Invalid ApparentTimeReference value (%lld)", (int64_t)reference);
}

QDebug operator<< (QDebug stream, ApparentTimeReference reference) {
    stream << QP(name_for_apparent_time_reference(reference));

    return stream;
}

QDataStream& operator<< (QDataStream& mut_stream, ApparentTimeReference reference) {
    mut_stream << (uint8_t)reference;

    return mut_stream;
}

}}
