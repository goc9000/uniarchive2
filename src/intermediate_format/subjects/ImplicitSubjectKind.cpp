/**
 * intermediate_format/subjects/ImplicitSubjectKind.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 9dbdca5e5a59f5d6647d654274b67efff7c83b60d5f994b61f6b125c5d21c93d
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/subjects/ImplicitSubjectKind.h"
#include "utils/qt/shortcuts.h"
#include "utils/serialization/deserialization_helpers.h"

#include <QtDebug>

namespace uniarchive2 { namespace intermediate_format { namespace subjects {

using namespace uniarchive2::utils::serialization;

QString name_for_implicit_subject_kind(ImplicitSubjectKind kind) {
    switch (kind) {
        case ImplicitSubjectKind::INVALID:
            return "(invalid)";
        case ImplicitSubjectKind::IDENTITY:
            return "identity";
        case ImplicitSubjectKind::FILE_RECEIVER:
            return "file receiver";
    }

    invariant_violation("Invalid ImplicitSubjectKind value (%lld)", (int64_t)kind);
}

QDebug operator<< (QDebug stream, ImplicitSubjectKind kind) {
    stream << QP(name_for_implicit_subject_kind(kind));

    return stream;
}

QDataStream& operator>> (QDataStream& mut_stream, ImplicitSubjectKind& mut_kind) {
    uint8_t code = must_deserialize(mut_stream, uint8_t);

    switch ((ImplicitSubjectKind)code) {
        case ImplicitSubjectKind::INVALID:
        case ImplicitSubjectKind::IDENTITY:
        case ImplicitSubjectKind::FILE_RECEIVER:
            mut_kind = (ImplicitSubjectKind)code;
            break;
        default:
            invariant_violation("Invalid deserialized ImplicitSubjectKind value (%lld)", (int64_t)code);
    }

    return mut_stream;
}

QDataStream& operator<< (QDataStream& mut_stream, ImplicitSubjectKind kind) {
    mut_stream << (uint8_t)kind;

    return mut_stream;
}

}}}
