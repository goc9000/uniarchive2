/**
 * intermediate_format/events/RawCorruptedMessageEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 7dff91c5beebc1a17345adf935bab9793350db9a31be142bf9bd52f85d2f8e5a
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/RawCorruptedMessageEvent.h"
#include "utils/serialization/deserialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

using namespace uniarchive2::utils::serialization;

RawCorruptedMessageEvent::RawCorruptedMessageEvent(
    IMM(ApparentTime) timestamp,
    uint32_t index,
    IMM(QByteArray) raw_data
) : RawEvent(timestamp, index), rawData(raw_data) {
}

RawEventSubType RawCorruptedMessageEvent::subType() const {
    return RawEventSubType::CORRUPTED_MESSAGE;
}

CEDE(RawCorruptedMessageEvent) RawCorruptedMessageEvent::deserializeFromStream(
    QDataStream& mut_stream,
    bool skip_type
) {
    invariant_violation("RawCorruptedMessageEvent deserialization not yet implemented");
}

void RawCorruptedMessageEvent::serializeDetailsToStream(QDataStream& mut_stream) const {
    mut_stream << rawData;
}

void RawCorruptedMessageEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " raw_data=" << rawData;
}

}}}
