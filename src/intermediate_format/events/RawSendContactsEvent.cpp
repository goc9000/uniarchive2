/**
 * intermediate_format/events/RawSendContactsEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 7fa1d01bf1b06299300cb4789e3c0dcd6f806aaed47342816a78f4b0907b780b
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/RawSendContactsEvent.h"
#include "utils/qt/debug_extras.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawSendContactsEvent::RawSendContactsEvent(
    IMM(ApparentTime) timestamp,
    uint index,
    TAKE(ApparentSubject) sender,
    TAKE_VEC(ApparentSubject) contacts
) : RawEvent(timestamp, index), sender(move(sender)), contacts(move(contacts)) {
    sanityCheckMandatoryParameters();
}

void RawSendContactsEvent::sanityCheckMandatoryParameters() const {
    invariant(sender, "Parameter 'sender' cannot have empty value");
    for (IMM(auto) item : contacts) {
        invariant(item, "Parameter 'contacts' cannot have empty entries");
    }
}

RawEventSubType RawSendContactsEvent::subType() const {
    return RawEventSubType::SEND_CONTACTS;
}

void RawSendContactsEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " sender=" << sender.get() << " contacts=" << contacts;
}

}}}
