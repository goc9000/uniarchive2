/**
 * intermediate_format/events/status/RawStatusChangeEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): f5e27b55cd500ed9bd9a0e5cd691d55dd68e2d643071ac0061ab77400a5710c9
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/status/RawStatusChangeEvent.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawStatusChangeEvent::RawStatusChangeEvent(
    IMM(ApparentTime) timestamp,
    uint index,
    TAKE(ApparentSubject) subject,
    IMStatus status
) : RawEvent(timestamp, index), subject(move(subject)), status(status) {
    sanityCheckMandatoryParameters();
}

void RawStatusChangeEvent::sanityCheckMandatoryParameters() const {
    invariant(subject, "Parameter 'subject' cannot have empty value");
}

RawEventSubType RawStatusChangeEvent::subType() const {
    return RawEventSubType::STATUS_CHANGE;
}

void RawStatusChangeEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " subject=" << subject.get() << " status=" << status;
    if (message) {
        stream << " message=" << *message;
    }
}

}}}
