/**
 * intermediate_format/events/RawUninterpretedEvent.h
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 17e4b6c8d1fd5daa81612db3c71e2b1f577523b4c9a123b06974f05814e506ab
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#ifndef UNIARCHIVE2_INTERMEDIATE_FORMAT_EVENTS_RAWUNINTERPRETEDEVENT_H
#define UNIARCHIVE2_INTERMEDIATE_FORMAT_EVENTS_RAWUNINTERPRETEDEVENT_H

#include "intermediate_format/events/RawEvent.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

struct RawUninterpretedEvent : RawEvent {
public:
    QByteArray rawData;

    RawUninterpretedEvent(IMM(ApparentTime) timestamp, uint32_t index, IMM(QByteArray) raw_data);

    virtual RawEventSubType subType() const;

    static CEDE(RawUninterpretedEvent) deserializeFromStream(QDataStream& mut_stream, bool skip_type=false);

protected:
    bool visitSubjectsImpl(IApparentSubjectVisitor& visitor);

    virtual void serializeDetailsToStream(QDataStream& mut_stream) const;

    virtual void writeDetailsToDebugStream(QDebug stream) const;
};

}}}

#endif //UNIARCHIVE2_INTERMEDIATE_FORMAT_EVENTS_RAWUNINTERPRETEDEVENT_H
