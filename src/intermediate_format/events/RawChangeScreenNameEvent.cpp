/**
 * intermediate_format/events/RawChangeScreenNameEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 83f23a50e0ea6fe0c40d5c819f693e0c4fa5751ee6b9d13d17485291d9c452b0
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/RawChangeScreenNameEvent.h"
#include "utils/qt/debug_extras.h"
#include "utils/serialization/serialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawChangeScreenNameEvent::RawChangeScreenNameEvent(
    IMM(ApparentTime) timestamp,
    uint32_t index,
    TAKE(ApparentSubject) from,
    TAKE(ApparentSubject) to
) : RawEvent(timestamp, index), from(move(from)), to(move(to)) {
    sanityCheckMandatoryParameters();
}

void RawChangeScreenNameEvent::sanityCheckMandatoryParameters() const {
    invariant(from, "Parameter 'from' cannot have empty value");
    invariant(to, "Parameter 'to' cannot have empty value");
}

RawEventSubType RawChangeScreenNameEvent::subType() const {
    return RawEventSubType::CHANGE_SCREEN_NAME;
}

void RawChangeScreenNameEvent::serializeDetailsToStream(QDataStream& mut_stream) const {
    mut_stream << from << to;
}

void RawChangeScreenNameEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " from=" << from << " to=" << to;
}

}}}
