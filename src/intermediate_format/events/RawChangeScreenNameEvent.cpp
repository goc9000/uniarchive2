/**
 * intermediate_format/events/RawChangeScreenNameEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 8089cc0a3c6ce10f6ed6691b68a12b13142770e3f453bc56b2cec836ed9f361f
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/RawChangeScreenNameEvent.h"
#include "utils/qt/debug_extras.h"
#include "utils/serialization/deserialization_helpers.h"
#include "utils/serialization/serialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

using namespace uniarchive2::utils::serialization;

RawChangeScreenNameEvent::RawChangeScreenNameEvent(
    IMM(ApparentTime) timestamp,
    uint32_t index,
    TAKE(ApparentSubject) from,
    TAKE(ApparentSubject) to
) : RawEvent(timestamp, index), from(move(from)), to(move(to)) {
    sanityCheckMandatoryParameters();
}

void RawChangeScreenNameEvent::sanityCheckMandatoryParameters() const {
    invariant(from, "Parameter 'from' cannot have empty value");
    invariant(to, "Parameter 'to' cannot have empty value");
}

RawEventSubType RawChangeScreenNameEvent::subType() const {
    return RawEventSubType::CHANGE_SCREEN_NAME;
}

CEDE(RawChangeScreenNameEvent) RawChangeScreenNameEvent::deserializeFromStream(
    QDataStream& mut_stream,
    bool skip_type
) {
    maybeDeserializeType(skip_type, mut_stream, RawEventSubType::CHANGE_SCREEN_NAME);

    ApparentTime timestamp = must_deserialize(mut_stream, ApparentTime);
    uint32_t index = must_deserialize(mut_stream, uint32_t);
    optional<QByteArray> skype_guid = must_deserialize(mut_stream, optional<QByteArray>);
    unique_ptr<ApparentSubject> from = must_deserialize(mut_stream, unique_ptr<ApparentSubject>);
    unique_ptr<ApparentSubject> to = must_deserialize(mut_stream, unique_ptr<ApparentSubject>);

    unique_ptr<RawChangeScreenNameEvent> event = make_unique<RawChangeScreenNameEvent>(
        timestamp,
        index,
        move(from),
        move(to)
    );
    event->skypeGUID = skype_guid;

    return event;
}

void RawChangeScreenNameEvent::serializeDetailsToStream(QDataStream& mut_stream) const {
    mut_stream << from << to;
}

void RawChangeScreenNameEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " from=" << from << " to=" << to;
}

}}}
