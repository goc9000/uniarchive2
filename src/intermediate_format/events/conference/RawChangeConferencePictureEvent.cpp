/**
 * intermediate_format/events/conference/RawChangeConferencePictureEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 8c05d5596b30d1058285e0dc2d318e4305aa442259eb6f09e0a81528e5229138
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/conference/RawChangeConferencePictureEvent.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawChangeConferencePictureEvent::RawChangeConferencePictureEvent(
    IMM(ApparentTime) timestamp,
    uint index,
    TAKE(ApparentSubject) subject
) : RawEvent(timestamp, index), subject(move(subject)) {
    sanityCheckMandatoryParameters();
}

void RawChangeConferencePictureEvent::sanityCheckMandatoryParameters() const {
    invariant(subject, "Parameter 'subject' cannot have empty value");
}

RawEventSubType RawChangeConferencePictureEvent::subType() const {
    return RawEventSubType::CHANGE_CONFERENCE_PICTURE;
}

void RawChangeConferencePictureEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " subject=" << subject.get();
}

}}}
