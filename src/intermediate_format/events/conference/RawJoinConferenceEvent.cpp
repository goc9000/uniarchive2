/**
 * intermediate_format/events/conference/RawJoinConferenceEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 81afb986a0beebaba347df8c8fe159096bbf2f8b9384afc566651a330309e1d3
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/conference/RawJoinConferenceEvent.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawJoinConferenceEvent::RawJoinConferenceEvent(IMM(ApparentTime) timestamp, uint index, TAKE(ApparentSubject) subject)
  : RawEvent(timestamp, index), subject(move(subject)) {
    sanityCheckMandatoryParameters();
}

void RawJoinConferenceEvent::sanityCheckMandatoryParameters() const {
    invariant(subject, "Parameter 'subject' cannot have empty value");
}

QString RawJoinConferenceEvent::eventName() const {
    return "JoinConference";
}

void RawJoinConferenceEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " subject=" << subject.get();
    if (message) {
        stream << " message=" << *message;
    }
}

}}}
