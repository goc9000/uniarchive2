/**
 * intermediate_format/events/conference/RawCreateConferenceEvent.h
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 9227fb79555e95e7c396c9642d362ef24e1d42c10cd8d322c4b0ed365ce7663f
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#ifndef UNIARCHIVE2_INTERMEDIATE_FORMAT_EVENTS_RAWCREATECONFERENCEEVENT_H
#define UNIARCHIVE2_INTERMEDIATE_FORMAT_EVENTS_RAWCREATECONFERENCEEVENT_H

#include "intermediate_format/events/RawEvent.h"
#include "intermediate_format/subjects/ApparentSubject.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

using namespace uniarchive2::intermediate_format::subjects;

struct RawCreateConferenceEvent : RawEvent {
public:
    unique_ptr<ApparentSubject> creator;
    optional<QString> conferenceName;

    RawCreateConferenceEvent(IMM(ApparentTime) timestamp, uint index, TAKE(ApparentSubject) creator);
    RawCreateConferenceEvent(
        IMM(ApparentTime) timestamp,
        uint index,
        TAKE(ApparentSubject) creator,
        IMM(QString) conference_name
    );

    virtual RawEventSubType subType() const;

    virtual QString eventName() const;

protected:
    virtual void writeDetailsToDebugStream(QDebug stream) const;

private:
    void sanityCheckMandatoryParameters() const;
};

}}}

#endif //UNIARCHIVE2_INTERMEDIATE_FORMAT_EVENTS_RAWCREATECONFERENCEEVENT_H
