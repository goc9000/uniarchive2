/**
 * intermediate_format/events/calls/RawOfferCallEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 94b41ae8daa6caac5f0c90f60148811511d0228b0e49bb3fbafb3e0aeb61f205
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/calls/RawOfferCallEvent.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawOfferCallEvent::RawOfferCallEvent(IMM(ApparentTime) timestamp, uint index, TAKE(ApparentSubject) caller)
  : RawEvent(timestamp, index), caller(move(caller)) {
    sanityCheckMandatoryParameters();
}

void RawOfferCallEvent::sanityCheckMandatoryParameters() const {
    invariant(caller, "Parameter 'caller' cannot have empty value");
}

RawEventSubType RawOfferCallEvent::subType() const {
    return RawEventSubType::OFFER_CALL;
}

void RawOfferCallEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " caller=" << caller.get();
}

}}}
