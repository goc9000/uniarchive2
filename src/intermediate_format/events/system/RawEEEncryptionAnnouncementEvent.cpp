/**
 * intermediate_format/events/system/RawEEEncryptionAnnouncementEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): d2c7c448525f67454d76e4f989a84b1c4f2a62abad2781f4f166787d1c5a7841
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/system/RawEEEncryptionAnnouncementEvent.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawEEEncryptionAnnouncementEvent::RawEEEncryptionAnnouncementEvent(IMM(ApparentTime) timestamp, uint32_t index)
  : RawEvent(timestamp, index) {
}

RawEventSubType RawEEEncryptionAnnouncementEvent::subType() const {
    return RawEventSubType::EE_ENCRYPTION_ANNOUNCEMENT;
}

void RawEEEncryptionAnnouncementEvent::serializeDetailsToStream(QDataStream& UNUSED mut_stream) const {
    // TODO: add field serialization code
}

void RawEEEncryptionAnnouncementEvent::writeDetailsToDebugStream(QDebug UNUSED stream) const {
}

}}}
