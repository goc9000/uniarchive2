/**
 * intermediate_format/events/system/RawEEEncryptionAnnouncementEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 8b587b058eb42617d6fd09f4672d11172edf7a5a37bb94a37574d33e553103c0
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/system/RawEEEncryptionAnnouncementEvent.h"
#include "utils/serialization/deserialization_helpers.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

using namespace uniarchive2::utils::serialization;

RawEEEncryptionAnnouncementEvent::RawEEEncryptionAnnouncementEvent(IMM(ApparentTime) timestamp, uint32_t index)
  : RawEvent(timestamp, index) {
}

RawEventSubType RawEEEncryptionAnnouncementEvent::subType() const {
    return RawEventSubType::EE_ENCRYPTION_ANNOUNCEMENT;
}

CEDE(RawEEEncryptionAnnouncementEvent) RawEEEncryptionAnnouncementEvent::deserializeFromStream(
    QDataStream& mut_stream,
    bool skip_type
) {
    invariant_violation("RawEEEncryptionAnnouncementEvent deserialization not yet implemented");
}

void RawEEEncryptionAnnouncementEvent::serializeDetailsToStream(QDataStream& UNUSED mut_stream) const {
}

void RawEEEncryptionAnnouncementEvent::writeDetailsToDebugStream(QDebug UNUSED stream) const {
}

}}}
