/**
 * intermediate_format/events/file_transfer/RawReceiveFileEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): f55200a7049c9d88c6f51245d29ad41a5665b976f56547820c6f64bf311d49db
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/file_transfer/RawReceiveFileEvent.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawReceiveFileEvent::RawReceiveFileEvent(
    IMM(ApparentTime) timestamp,
    uint32_t index,
    TAKE(ApparentSubject) receiver,
    IMM(RawTransferredFile) file
) : RawEvent(timestamp, index), receiver(move(receiver)), file(file) {
    sanityCheckMandatoryParameters();
}

void RawReceiveFileEvent::sanityCheckMandatoryParameters() const {
    invariant(receiver, "Parameter 'receiver' cannot have empty value");
}

RawEventSubType RawReceiveFileEvent::subType() const {
    return RawEventSubType::RECEIVE_FILE;
}

void RawReceiveFileEvent::serializeDetailsToStream(QDataStream& mut_stream) const {
    // TODO: add field serialization code
}

void RawReceiveFileEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " receiver=" << receiver.get();
    if (sender) {
        stream << " sender=" << sender.get();
    }
    stream << " file=" << file;
}

}}}
