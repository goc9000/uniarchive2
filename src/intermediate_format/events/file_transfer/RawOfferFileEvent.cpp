/**
 * intermediate_format/events/file_transfer/RawOfferFileEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 429a605ed83063f327b9e06b923e562e135f225afcc2c109d9ebbeec7402342f
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/file_transfer/RawOfferFileEvent.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawOfferFileEvent::RawOfferFileEvent(
    IMM(ApparentTime) timestamp,
    uint32_t index,
    TAKE(ApparentSubject) sender,
    IMM(RawTransferredFile) file
) : RawEvent(timestamp, index), sender(move(sender)), file(file) {
    sanityCheckMandatoryParameters();
}

void RawOfferFileEvent::sanityCheckMandatoryParameters() const {
    invariant(sender, "Parameter 'sender' cannot have empty value");
}

RawEventSubType RawOfferFileEvent::subType() const {
    return RawEventSubType::OFFER_FILE;
}

void RawOfferFileEvent::serializeDetailsToStream(QDataStream& mut_stream) const {
    // TODO: add field serialization code
}

void RawOfferFileEvent::writeDetailsToDebugStream(QDebug stream) const {
    stream << " sender=" << sender.get();
    if (recipient) {
        stream << " recipient=" << recipient.get();
    }
    stream << " file=" << file;
}

}}}
