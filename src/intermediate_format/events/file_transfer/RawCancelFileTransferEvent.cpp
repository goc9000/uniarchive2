/**
 * intermediate_format/events/file_transfer/RawCancelFileTransferEvent.cpp
 *
 * WARNING: This file is autogenerated. To make changes, edit autogen_config.yml instead and re-generate.
 * Codegen hash (sha256): 67ae9ee4e41df7074101f8d3249a895625185b12f6f1b470884ea7ec7293a62e
 *
 * (C) Copyright 2014-present  Cristian Dinu <goc9000@gmail.com>
 *
 * This file is part of UniArchive II.
 *
 * Licensed under the GPL-3
 */

#include "intermediate_format/events/file_transfer/RawCancelFileTransferEvent.h"
#include "utils/qt/debug_extras.h"

namespace uniarchive2 { namespace intermediate_format { namespace events {

RawCancelFileTransferEvent::RawCancelFileTransferEvent(IMM(ApparentTime) timestamp, uint32_t index)
  : RawEvent(timestamp, index) {
}

RawCancelFileTransferEvent::RawCancelFileTransferEvent(
    IMM(ApparentTime) timestamp,
    uint32_t index,
    IMM(RawTransferredFile) file
) : RawEvent(timestamp, index), file(file) {
}

RawEventSubType RawCancelFileTransferEvent::subType() const {
    return RawEventSubType::CANCEL_FILE_TRANSFER;
}

void RawCancelFileTransferEvent::serializeDetailsToStream(QDataStream& mut_stream) const {
    // TODO: add field serialization code
}

void RawCancelFileTransferEvent::writeDetailsToDebugStream(QDebug stream) const {
    if (file) {
        stream << " file=" << file;
    }
    if (actor) {
        stream << " actor=" << actor;
    }
}

}}}
